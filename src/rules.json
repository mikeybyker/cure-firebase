{
  "rules": {
    ".read": "auth != null",
    ".write": "false",
    "ranks": {
      ".read": "true",
      ".write": "auth != null",
      ".indexOn": [
        "id",
        "average"
      ],
      "$id": {
        // average must be a number between 0 and 5
        ".validate": "newData.child('average').isNumber() && newData.child('average').val() >=0 && newData.child('average').val() <=5"
      }
    },
    "tracks": {
      ".read": "true",
      ".write": "auth != null",
      "$id": {
        "$id": {
          // total and votes must be numbers 0 or higher
          ".validate": "newData.child('total').isNumber() && newData.child('total').val() >=0 && newData.child('votes').isNumber() && newData.child('votes').val() >=0"
        }
      }
    },
    "test": {
      ".read": "true",
      ".write": "auth != null"
    },
    "playlists": {
      ".read": "false",
      "$id": {
        // Let non existant be written, but once there, only owner
        ".write": "!data.hasChild('owner') || data.child('owner').val() == auth.uid"
      }
    },
    "artist": {
      ".read": "true",
      ".write": "false",
      "$artist": {
        "discog": {
          ".indexOn": [
            "title",
            "format"
          ]
        }
      }
    },
    "users": {
      "$uid": {
        ".write": "$uid === auth.uid"
      }
    }
  }
}